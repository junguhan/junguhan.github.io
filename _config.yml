# Site
repository: semicolok/semicolok.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: 한준구
title: Software Engineer
email: semicolok@gmail.com
website: semicolok.github.io

# Dark Mode (true/false/never)
darkmode: false

# Social links
# twitter_username: semicolok
github_username: semicolok
# stackoverflow_username: "00000001"
# dribbble_username: semicolok
# facebook_username: semicolok
# flickr_username: semicolok
# instagram_username: jameswgrant
linkedin_username: junguhan
# xing_username: jekyll
# pinterest_username: semicolok
# youtube_username: jknyou
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
# additional_links:
# - title: itsgoingto.be
#   icon: fas fa-globe
#   url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
about_title: About Me
about_profile_image: images/profile_1.jpg
about_content: | 
    안녕하세요. 한준구입니다.

    2011년에 Startup에서 Java 개발자로 커리어를 시작하여 E-Commerce(쿠팡, 티몬), 일본 IT(라쿠텐), Internet Bank(카카오뱅크), OTA(야놀자)까지 다양한 도메인 경험을 가지고 있는 개발자입니다.
    작은 규모의 Startup 근무 경험으로 Server, Database, Middleware 셋팅 그리고 Application 개발까지 폭 넓은 경험을 가지고 있습니다.
    쿠팡, 티몬, 카카오뱅크등 대량의 트래픽을 처리하는 서비스에 대한 경험을 가지고 있고, 복잡한 OTA서비스의 도메인을 모두 이해하고 처리해야하는 팀에서의 근무경험으로
    어떠한 도메인이든 단순화하고 빠르게 적응할 수 있는 개발자 입니다.
    
    부사관 복무로 남들 보다 길었던 군생활로 사회생활 시작이 조금 늦었지만, 그 경험을 바탕으로 더 주도적이고 책임감 있는 사람으로 사회생활을 할 수 있었습니다.
    지금은 먼저 시작한 개발자분들과 비교해 뒤쳐지지 않는 개발자가 되었다고 생각합니다.
    
    여느 개발자들처럼 신기술에 관심이 많고 배우는 것을 즐깁니다. 하지만 기술보다는 서비스가 더 중요하다고 생각하는 개발자입니다.
    "어떤 기술을 어떻게 적용할까?"보다 "우리 서비스를 어떻게 더 발전시켜 볼까?"를 고민합니다.
    그 어떤 좋은 기술이라도 서비스에 문제가 생긴다면 그 기술들의 가치는 빛을 보지 못하기 때문에 항상 서비스 관점에서 먼저 생각하고 적합한 기술을 선택하고 충분히 검증 후 사용하려고 노력하는 개발자입니다.

    감사합니다.

content:
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 야놀자 (Yanolja Co.,Ltd)
        link: https://yanolja.com/
        sub_title: Software Engineer
        caption: Sep 2021 - Present
        quote: >
          Full-Stack Hospitality Service Provider
        description: | 
            - 선매입 호텔 가격 일괄 조정 기능 개발 (Java, Spring Boot, Spring Data JPA, MyBatis, Kafka, Gradle, Slack API)
              - 지역별 선매입 호텔 관리 기능
                - 가격 조정이 필요한 선매입 호텔 관리 기능을 개발.
              - 가격 조정 제외 조건 관리 기능
                - 선매입 호텔 가격 조정시, 제외 조건(업장, 요금제, 날짜)을 적용/관리 할 수 있는 기능 개발.
              - 가격 조정 기능
                - 가격 제외 조건에 포함되지 않는 판매설정에 대해 일괄 가격 조정 기능 개발.
                - 가격 조정 결과 내역 관리 기능 개발
              - 가격 조정시 알림 기능
                - 가격 조정 발생시, slack-api를 통해 slack-message 발송 기능 개발.
            - 모텔 선매입 BM 도입 (Java, Kotlin, Spring Boot, Spring Data JPA, Spring Cloud OpenFeign, Kafka, Gradle, Slack API, Apache POI)
              - 제휴입점관리자에 모텔 선매입 요금제 등록 기능 개발
              - 계약 API를 연동하여 계약 상태 validation
              - 파트너센터/관리자에 모텔 선매입 관리 기능
                - 요금제/판매설정 관리 기능 개발
                - 판매설정 일괄 업데이트, 업데이트 내역 관리 기능 개발
                - 매출/예약 관리 기능 개발
              - 이벤트 알림 기능(매진 임박, 오버부킹 발생)
                - 운영 이벤트 발생시, slack-api를 통해 message 전송 기능 개발.
            - 호텔 데이터 통합 Backend 개발 & Data migration (Java, PHP, Spring Boot, Gradle, Kafka)
              - 호텔나우 시스템 분석
              - 호텔나우 데이터 컨버팅
              - rateplan-api 정보와 병합
              - supplier-rateplan에 저장, 상품플랫폼팀으로 Kafka를 통해 전송.
              - 호텔나우 숙소/요금제 추가시, Kafka를 이용한 실시간 동기화 기능.
            - 한화 CRS 연동 (Java, Spring Boot, Gradle, Kafka)
              - 한화 CRS 분석
              - 한화 숙소/객실/패키지/가격/수량 동기화.
              - 야놀자 요금제와 한화 요금제 맵핑.
              - 예약/취소 기능 개발.
              - 실패처리 알림 및 관리 기능 개발.
            - 요금표 기능 개발 (Java, Spring Boot, Gradle, Kafka)
              - 요금표 관리 기능 개발
              - 요금표를 이용해 판매설정 자동 생성 기능 개발.
            - 리펙토링 & 운영 이슈
              - JPA를 이용하여 불필요한 데이터 조회로 Full Scan이 발생하여 Covering Index로 처리 되도록 수정.
              - 비즈니스 로직없이 relay만하는 mashup프로젝트에 불필요한 DTO가 생성되지 않도록 Spring Proxy Exchange 적용.
              - 한화 CRS API를 직접 호출해서 조회할 수 있는 편의 기능 개발.
              - 사용자를 강제로 로그아웃 시키기 위해 Kafka를 호출하는 기능을 JWT토큰을 확인하여 처리하도록 수정.
              - 판매설정에서 동시성 이슈가 발생하여, JPA Optimistic Locking을 적용.
              - Spring Scheduler가 중복실행되는 이슈를 막기위해 Scheduler Lock 적용.
              - 자주 호출되는 사용자 접근 가능한 숙 소정보와 권한 정보를 가져오는 2개의 API를 query 하나로 처리하도록 병합하고 cache적용.
              - MSA 모듈의 잘못된 설계로 복잡하고 느린 API 정리.
                - sos-mashup -> pc-api -> pc-member-api -> hst-api | sos-mashup -> hst-api
      - layout: left
        title: 카카오 뱅크 (Kakao Bank Corp.,)
        link: https://kakaobank.com/
        # link_text: boringcompany.com
        sub_title: Software Engineer
        caption: Feb 2020 - Aug 2021
        quote: >
          Top internet-only lender Kakao Bank  
        description: | # this will include new lines to allow paragraphs
            - S3기반의 파일 관리 시스템 개발 (MinIO, Spring Boot, Spring Security OAuth2.0, Gradle, MySQL)
            - 도커 배포 시스템 개발 (Ansible, Jenkins, Spring Boot, Gradle, MongoDB)
            - 계정관리 시스템 개발 (OpenLDAP, Spring Boot, Gradle, MySQL)
      - layout: left
        title: 라쿠텐 (Rakuten, Inc.)
        link: https://rakuten.com/
        sub_title: Software Engineer & DevOps Team Leader
        caption: Feb 2017 - Mar 2020
        quote: >
          Japanese e-commerce and online retailing company based in Tokyo  
        description: | 
            - Rakuten Mobile App server 개발 (Java, Spring Boot, Gradle) 
            - CS AI Chatbot 개발 (Vaadin, Spring Boot, Maven) 
            - Microservice API 개발 (Spring-cloud, Gradle, Strangler Pattern)
            - Distributed operating system 구축 (DC/OS, Azure, Kubernetes, Istio, GCP)
            - Third party API Integration (KDDI, Docomo, Google)
            - Legacy system migration (Perl and PL/SQL to Java, Spring and JPA)

      - layout: left
        title: 티켓몬스터 (TICKETMONSTER INC.)
        link: https://tmon.co.kr/
        sub_title: Software Engineer
        caption: May 2016 - Dec 2016
        quote: >
          The first social commerce operator in Korea
        description: | 
            - Deal contents part 개발 (Jave, Spring, Maven, AngularJS)
            - “Shoppable project” Backend 개발 (Java, Spring, Gradle)

      - layout: left
        title: 쿠팡 (Coupang, Inc.)
        link: https://coupang.com/
        sub_title: Software Engineer
        caption: Mar 2015 - Apr 2016
        quote: >
          "How did we ever live without Coupang?" | Coupang is the largest e-commerce company in Korea
        description: | 
            - CS Platform
              - Chatting server 개발(NodeJS, Spring, Gradle, Strangler Pattern)
              - Application server 개발 (Linux, Java, Spring, Gradle)
              - Web client 개발 (JavaScript, handlebars)
            - Biz Platform
              - Application server 개발 (Linux, Java, Spring)
              - Web client 개발 (JavaScript, ReactJS, Handlebars)
              - System migration.

      - layout: left
        title: 소프트웨어인라이프 (Software in Life Inc.)
        link: https://docswave.com/
        sub_title: Software Engineer & Solution Part Leader
        caption: Nov 2011 - Mar 2015
        quote: >
          Cloud Services Brokerage Company  
        description: | 
            - System Architecture 설계 (application, technical, data)
            - Application server 개발 (Linux, Java, Spring, Maven, Gradle, Python, django)
            - Web client 개발 (JavaScript, AngularJS)
            - Android 개발

  - title: Skills
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Languages
        description: | 
            Java, Javascript, Kotlin, Scala, Groovy, Python, SQL, PL/SQL
      - layout: left
        title: Standards / Frameworks
        description: | 
            Spring, Spring-boot, Spring-cloud, Spring-security, Spring-data, Spring-data-redis, Gradle, Maven, SBT, QueryDSL, Hibernate, MyBatis, Ehcache, Servlet, AJAX, JQuery, RESTful, Flyway, Junit, Mockito, Spock, Play framework, Skinny-orm,  Django, Grails, AngularJS, NodeJS, ReactJS
      - layout: left
        title: Web Servers / Application Servers
        description: | 
            Apache, Nginx, Tomcat, Jetty, GlassFish
      - layout: left
        title: Databases
        description: | 
            Oracle, MySQL, MariaDB, Redis, MongoDB, Google Cloud SQL, Google Datastore, AWS Aurora
      - layout: left
        title: Development / Environment Tools / Techniques
        description: | 
            Git, Subversion, Jenkins, Jira, Google Compute Engine, Google Kubernetes Engine, AWS, Azure, Nexus, JMeter, nGrinder, Pinpoint, DC/OS, Kubernetes, Docker, Kafka
      

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 백석대학교
        caption: 2003 - 2012
        sub_title: 멀티미디어학 학사 (BSc Multimedia Engineering)
        # quote: >
        #   Established in 1636, Harvard is the oldest higher education institution in the United States, and is widely regarded in terms of its influence, reputation, and academic pedigree as a leading university in not just the US but also the world.
        # description: | # this will include new lines to allow paragraphs
        #   During my time at Harvard I learnt most of my key skills that have I have taken through my career such as teamwork and working to tight deadlines. I thouroughly enjoyed my time as university and learnt a lot about a healthy work life balance.

        #   I spent a lot of my free time as a committee member of the *Harvard Mountaineering Club* taking on roles such as *Trip Secretary* and *Vice-President*.

  - title: A Little More About Me
    layout: text
    content: | 
      취미:
      - Powerlifting
      - Bouldering
      - Traveling

  #     Look at this cool image  
  #     ![Trees](images/landscape-trees.jpg "Trees")

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
